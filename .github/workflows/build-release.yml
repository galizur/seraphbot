name: Build and Release

on:
  release:
    types: [published]
  push:
    tags:
      - "v*"

jobs:
  build-linux-wayland:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y clang libc++-dev libc++abi-dev meson ninja-build \
               libwayland-dev wayland-protocols libxkbcommon-dev \
               libgl1-mesa-dev libegl1-mesa-dev

      - name: Cache Boost
        uses: actions/cache@v4
        with:
          path: boost_1_88_0
          key: boost-1.88.0-linux-${{ hashFiles('**/meson.build') }}

      - name: Cache Meson subprojects
        uses: actions/cache@v4
        with:
          path: |
                subprojects/packagecache
                subprojects/packagefiles
                subprojects/*.wrap
                build/subprojects
          key: meson-deps-v3-${{ hashFiles('subprojects/*.wrap', 'meson.build', 'build-release.yml') }}
          restore-keys: |
                        meson-deps-v2-
                        meson-deps-

      - name: Install Boost (if not cached)
        run: |
             if [ ! -d "boost_1_88_0" ]; then
                curl -L -O https://archives.boost.io/release/1.88.0/source/boost_1_88_0.tar.gz
                tar xzf boost_1_88_0.tar.gz
                cd boost_1_88_0
                ./bootstrap.sh
                sudo ./b2 install -j$(nproc)
             fi

      - name: Setup Python and Meson
        run: |
             python -m pip install --upgrade pip
             pip install meson ninja

      - name: Install Meson wrap dependencies
        run: |
             meson wrap install openssl
             meson wrap install nlohmann_json
             meson wrap install glfw

      - name: Configure build
        run: |
          meson setup build --native-file=debug-linux-clang.ini --buildtype=debug

      - name: Build
        run: |
          meson compile -C build -j$(nproc)

      - name: Package binary
        run: |
          mkdir -p release
          cp build/seraphbot release/
          cp README.md release/
          cp LICENSE release/
          tar -czf seraphbot-linux-x86_64.tar.gz -C release .

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: seraphbot-linux
          path: seraphbot-linux-x86_64.tar.gz

      - name: Upload to release
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v1
        with:
          files: seraphbot-linux-x86_64.tar.gz

  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup vcpkg
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgGitCommitId: "120deac3062162151622ca4860575a33844ba10b"

      - name: Cache vcpkg
        uses: actions/cache@v4
        with:
          path: |
                ${{ env.VCPKG_ROOT }}/installed
                ${{ env.VCPKG_ROOT }}/packages
          key: vcpkg-v3-${{ runner.os }}-${{ hashFiles('**/vcpkg.json', '**/*.vcpkg') }}

      - name: Install dependencies
        run: |
          vcpkg install --triplet x64-windows-static

      - name: Setup MSVC
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x64

      - name: Setup Python and Meson
        run: |
          pip install meson ninja

      - name: Install Meson wrap dependencies
        run: |
             meson wrap install openssl
             meson wrap install spdlog
             meson wrap install nlohmann_json
             meson wrap install glfw

      - name: Configure build
        run: |
          meson setup build --native-file=debug-windows.ini --buildtype=debug

      - name: Build
        run: |
          meson compile -C build

      - name: Package binary
        run: |
          mkdir release
          copy build\seraphbot.exe release\
          copy README.md release\
          copy LICENSE release\
          powershell Compress-Archive -Path release\* -DestinationPath seraphbot-windows-x86_64.zip

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: seraphbot-windows
          path: seraphbot-windows-x86_64.zip

      - name: Upload to release
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v1
        with:
          files: seraphbot-windows-x86_64.zip

  # Future: Add macOS builds when ready
  # build-macos:
  #   runs-on: macos-latest
  #   steps:
  #     # macOS build steps with homebrew
